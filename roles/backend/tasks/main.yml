# dnf module disable nodejs -y
# dnf module enable nodejs:20 -y 
# dnf install nodejs -y 
# useradd expense
# mkdir /app 
# curl -o /tmp/backend.zip https://expense-web-app.s3.amazonaws.com/backend.zip 
# cp backend.service /etc/systemd/system/backend.service
# cd /app 
# unzip -o /tmp/backend.zip
# cd /app 
# npm install 
# chmod -R 775 /app
# chown -R expense:expense /app
# dnf install mysql-server -y
# mysql -h 172.31.33.204 -uroot -pExpenseApp@1 < /app/schema/backend.sql
# systemctl daemon-reload
# systemctl enable backend 
# systemctl start backend 

- name: set hostname
  ansible.builtin.shell: set-hostname "{{COMPONENT}}"


- name: Disable nodejs module
  ansible.builtin.command: dnf module disable nodejs -y

- name: Enable specific version of a DNF module
  ansible.builtin.command: dnf module enable nodejs:20 -y

- name: Install nodejs
  ansible.builtin.package:
    name: nodejs
    state: present

- name: creating service account - expense
  ansible.builtin.user:
    name: expense
    comment: Expense Service Account

- name : Cleanup 
  ansible.builtin.file:
    path: /app
    state: absent

- name : creating a directory
  ansible.builtin.file:
    path: /app
    state: directory

- name: Download the file from S3 URL
  ansible.builtin.get_url:
    url: https://expense-web-app.s3.amazonaws.com/backend.zip
    dest: /tmp/backend.zip

- name: Copy backend service file
  ansible.builtin.copy:
    src: backend.service
    dest: /etc/systemd/system/backend.service

- name: Extract zip file from controller to remote
  ansible.builtin.unarchive:
    src: /tmp/backend.zip
    dest: /app
    remote_src: yes

- name: Install npm packages
  ansible.builtin.command: npm install
  args:
    chdir: /app

- name: Provide permissions to /app directory
  ansible.builtin.file:
    path: /app
    state: directory
    mode: '0775'
    owner: expense

- name: Install {{COMPONENT}}
  ansible.builtin.package:
    name: 
      - mysql-server
      - python3-pip
      - gcc
      - python3-devel
      - libffi-devel
      - openssl-devel
    state: present


- name: Install PyMySQL
  ansible.builtin.pip:
    name: PyMySQL
    executable: pip3

- name: Install cryptography package
  ansible.builtin.pip:
    name: cryptography
    executable: pip3


- name: Importing DB schema
  community.mysql.mysql_db:
    login_host: 172.31.27.54
    login_user: root
    login_password: ExpenseApp@1
    name: backend
    state: import
    target: /app/schema/backend.sql

- name: Reload systemd to reflect the changes made
  ansible.builtin.systemd:
    name: backend
    daemon_reload: yes
    state: reloaded
    enabled: yes

- name: Enable and start backend service
  ansible.builtin.service:
    name: backend
    state: started
    enabled: true 

- name: Print completion message
  ansible.builtin.debug:
    msg: "** {{COMPONENT}} Installation Is Completed **"